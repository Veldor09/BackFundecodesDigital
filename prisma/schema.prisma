// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProjectStatus {
  EN_PROCESO
  FINALIZADO
  PAUSADO
}

model Project {
  id          Int           @id @default(autoincrement())
  title       String
  slug        String        @unique
  summary     String?
  content     String?
  coverUrl    String?

  // NOT NULL
  category    String
  place       String
  area        String

  status      ProjectStatus @default(EN_PROCESO)

  published   Boolean       @default(false)
  publishedAt DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relaciones
  images      ProjectImage[]
  documents   ProjectDocument[]

  /// combinación única solicitada
  @@unique([title, place, area])
  @@index([status])
  @@index([updatedAt])
}

model ProjectImage {
  id         Int      @id @default(autoincrement())
  projectId  Int
  url        String
  alt        String?
  order      Int      @default(0)
  createdAt  DateTime @default(now())

  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([projectId])
  @@index([order])
}

model ProjectDocument {
  id         Int      @id @default(autoincrement())
  projectId  Int
  url        String
  name       String
  mimeType   String?
  size       Int?
  createdAt  DateTime @default(now())

  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([projectId])
}

model News {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  content     String?
  coverUrl    String?
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model Volunteer {
  id             Int      @id @default(autoincrement())
  nombre         String
  email          String
  telefono       String
  disponibilidad String
  mensaje        String
  createdAt      DateTime @default(now())
}
